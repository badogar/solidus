<%#encoding: UTF-8%>
// Product autocompletion
format_product_autocomplete = function(item){
  var html = "";

  var product = item.data['product'];
  var output_name = function(name) {
    return "<h4>" + name + "</h4>";
  }

  var output_sku = function(sku) {
    return "<span><strong>" + Spree.translations.sku + ":</strong> " + sku + "</span>";
  }

  var output_count_on_hand = function(count_on_hand) {
    return "<span><strong>" + Spree.translations.sku + ":</strong> " + count_on_hand + "</span>";
  }

  var output_image = function(item){
    return "<img src='" + item['images'][0]['image']["mini_url"] + "'/>";
  }

  if (item.data['variant'] == undefined) {
    if (product['images'].length != 0) {
      html = output_image(product);
    }

    html += "<div>";

    html += output_name(product['name']);

    if (product['master']) {
      html += output_sku(product['master']['sku']);
    }
    html += output_count_on_hand(product['master']['count_on_hand']);
  }
  else {
    // variant
    var variant = item.data['variant']['variant'];
    var name = variant['admin_label']

    if (variant['images'].length != 0){
      html = output_image(variant);
    }
    else {
      if (product['images'].length != 0){
        html = output_image(product);
      }
    }

    html += "<div>";
    html += output_name(name);
    html += output_sku(variant['sku']);
    html += output_count_on_hand(variant['count_on_hand']);
  }

  return html
}

prep_product_autocomplete_data = function(data){
  return $.map(eval(data['products']), function(row) {

    var product = row['product'];

    if (product['variants'].length > 0) {
      //variants
      return $.map(product['variants'], function(variant){

        var name = variant['admin_label']

        return {
            data: {product: product, variant: variant},
            value: name,
            result: name
        }
      });
    } else {
      return {
          data: {product: product},
          value: product['name'],
          result: product['name']
      }
    }
  });
}

$.fn.product_autocomplete = function(){
  return this.each(function() {
    $(this).autocomplete({
      source: function(request, response) {
        $.get(Spree.routes.product_search + '?' + jQuery.param({ q: $('.product_autocomplete').val(), authenticity_token: encodeURIComponent($('meta[name=csrf-token]').attr("content"))}), function(data) {
          result = prep_product_autocomplete_data(data)
          response(result);
        });
      },
      minLength: 4,
      focus: function(event, ui) {
        $('.product_autocomplete').val(ui.item.label);
        return false;
      },
      select: function(event, ui) {
        $('.product_autocomplete').val(ui.item.label);
        product = ui.item.data;
        if (product['variant'] == undefined) {
          // product
          $('#add_variant_id').val(product['product']['master']['id']);
        } else {
          // variant
          $('#add_variant_id').val(product['variant']['id']);
        }
        return false;
      }
    }).data("autocomplete")._renderItem = function(ul, item) {
      $(ul).addClass('ac_results');
      html = format_product_autocomplete(item);
      return $("<li></li>")
              .data("item.autocomplete", item)
              .append("<a>" + html + "</a>")
              .appendTo(ul);
    }

    $(this).data("autocomplete")._resizeMenu = function() {
      var ul = this.menu.element;
      ul.outerWidth(this.element.outerWidth());
    }
  });
}
